package com.malware.application.camel;

import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import org.apache.camel.Exchange;
import org.apache.camel.Processor;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * Converts timestamps from input headers in ISO-8601 string format to MySQL-compatible timestamp format.
 * Per the MySQL docs available at https://dev.mysql.com/doc/refman/8.0/en/datetime.html
 * the format for a {@code timestamp} column is {@code YYYY-MM-DD hh:mm:ss}
 */
public class Iso8601ToMySqlTimestampProcessor implements Processor {

    private final String[] headers;
    private static final Logger logger = LoggerFactory.getLogger(Iso8601ToMySqlTimestampProcessor.class);

    public Iso8601ToMySqlTimestampProcessor(String... headers) {
        this.headers = headers;
    }

    @Override
    public void process(Exchange exchange) throws Exception {
        exchange.setOut(exchange.getIn());
        for (String header : headers) {
            String originalValue = (String) exchange.getIn().getHeader(header);

            if (originalValue == null) {
                logger.debug("Could not find header {} in input.", header);
            } else {
                LocalDateTime time = LocalDateTime.parse(originalValue, DateTimeFormatter.ISO_DATE_TIME);

                //YYYY-MM-DD hh:mm:ss
                String formatStr = String.format("%04d-%02d-%02d %02d:%02d:%02d", time.getYear(), time.getMonthValue(), time.getDayOfMonth(),
                    time.getHour(), time.getMinute(), time.getSecond());
//                logger.info("format = " + formatStr);
                exchange.getOut().setHeader(header, formatStr);
            }
        }

    }
}
