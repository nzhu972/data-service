package com.malware.application;

import org.apache.camel.builder.RouteBuilder;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

/**
 * Camel Route Builder for exposing REST API endpoints and handling data transformation
 * 
 * @author Nevin Zhu
 * @version 1.0
 * @since 2020-5-7
 *
 */
@Configuration
public class DataServiceAutoConfiguration {

    @Bean
    public RouteBuilder routeBuilder() {
        return new RouteBuilder() {
            @Override
            public void configure() throws Exception {
                rest("/data")
                    .post("/srecord/{h_sid}").to("direct:build-submission-record")
                    .post("/mfile/{h_tid}").to("direct:build-move-file")
                    .post("/hfile").to("direct:build-hash-file")
                    .post("/metadata/{h_tid}").to("direct:build-metadata")
                    .post("/nsrl").to("direct:build-nsrl-lookup")
                    .post("/trecord/{h_sid}/{h_tid}/{h_level}").to("direct:build-transaction-record")
                    .post("/unzip").to("direct:build-unzip")
                    .post("/hashseen").to("direct:build-hashseen")
                    .post("/magic/{h_sid}/{h_tid}").to("direct:build-magic-analysis")
                    .post("/engine/{h_sid}/{h_tid}").to("direct:build-analysis-engine");
                
                /*
                 * Inbound Data Description: Raw data from submission queue
                 * Inbound Data Type: JSON
                 * Accept-Content: text/plain
                 * Method: HTTP-POST
                 * Outbound Data Description: JSON request payload for invoking submission record microservice
                 */
                from("direct:build-submission-record").id("build-submission-record")
                    .log("${body}")
                    .setHeader("h_fname").jsonpath("submission_data.first_name")
                    .setHeader("h_lname").jsonpath("submission_data.last_name")
                    .setHeader("h_pnumber").jsonpath("submission_data.phone_number")
                    .setHeader("h_org").jsonpath("submission_data.organization")
                    .setHeader("h_email").jsonpath("submission_data.email")
                    .setHeader("h_ip").jsonpath("submission_data.ip")
                    .to("freemarker:templates/submission_record_req.ftl")
                    .log("...response built for submission record request: ${body}");
                
                /*
                 * Inbound Data Description: Raw data from submission queue
                 * Inbound Data Type: JSON
                 * Accept-Content: text/plain
                 * Method: HTTP-POST
                 * Outbound Data Description: JSON request payload for invoking file mover microservice
                 */
                from("direct:build-move-file").id("build-move-file")
                .log("..Received payload from REST API: ${body}")
                .setHeader("h_filepath").jsonpath("file_paths[0]")
                .to("freemarker:templates/move_file_req.ftl")
                .log(".. response built for move file request: ${body}");
                
                /*
                 * Inbound Data Description: JSON response data from file mover microservice
                 * Inbound Data Type: JSON
                 * Accept-Content: text/plain
                 * Method: HTTP-POST
                 * Outbound Data Description: JSON request payload for invoking create hash microservice
                 */
                from("direct:build-hash-file").id("build-hash-file")
                .log("..Received payload from REST API: ${body}")
                .setHeader("h_filepath").jsonpath("file_info[0].path")
                .setHeader("h_filename").jsonpath("file_info[0].new_file_name")
                .to("freemarker:templates/hash_file_req.ftl")
                .log(".. response built for hash file request: ${body}");
                
                /*
                 * Inbound Data Description: JSON response data from create hash microservice
                 * Inbound Data Type: JSON
                 * Accept-Content: text/plain
                 * Method: HTTP-POST
                 * Outbound Data Description: JSON request payload for invoking metadata microservice
                 */
                from("direct:build-metadata").id("build-metadata")
                .log("..Received payload from REST API: ${body}")
                .setHeader("h_md5").jsonpath("file_data[0].hashes.md5")
                .setHeader("h_sha1").jsonpath("file_data[0].hashes.sha1")
                .setHeader("h_sha256").jsonpath("file_data[0].hashes.sha256")
                .setHeader("h_sha512").jsonpath("file_data[0].hashes.sha512")
                .setHeader("h_ssdeep").jsonpath("file_data[0].hashes.ssdeep")
                .to("freemarker:templates/create_metadata_req.ftl")
                .log(".. response built for create metadata request: ${body}");
                
                /*
                 * Inbound Data Description: JSON response data from create hash microservice
                 * Inbound Data Type: JSON
                 * Accept-Content: text/plain
                 * Method: HTTP-POST
                 * Outbound Data Description: JSON request payload for invoking nsrl lookup microservice
                 */
                from("direct:build-nsrl-lookup").id("build-nsrl-lookup")
                .log("..Received payload from REST API: ${body}")
                .setHeader("h_sha1").jsonpath("file_data[0].hashes.sha1")
                .to("freemarker:templates/nsrl_req.ftl")
                .log(".. response built for nsrl request: ${body}");

                /*
                 * Inbound Data Description: Concatenated JSON data from joining submission record response data and file mover response data
                 * Inbound Data Type: JSON
                 * Accept-Content: text/plain
                 * Method: HTTP-POST
                 * Outbound Data Description: JSON request payload for invoking transaction record microservice
                 */
                from("direct:build-transaction-record").id("build-transaction-record")
                .log("..Received payload from REST API: ${body}")
                .setHeader("h_submission_id").jsonpath("submission_id")
                .setHeader("h_filepath").jsonpath("file_info[0].path")
                .setHeader("h_filename").jsonpath("file_info[0].new_file_name")
                .to("freemarker:templates/transaction_record_req.ftl")
                .log(".. response built for transaction record request: ${body}");
                
                /*
                 * Inbound Data Description: JSON response data from file mover microservice
                 * Inbound Data Type: JSON
                 * Accept-Content: text/plain
                 * Method: HTTP-POST
                 * Outbound Data Description: JSON request payload for invoking unzip microservice
                 */
                from("direct:build-unzip").id("build-unzip")
                .log("..Received payload from REST API: ${body}")
                .setHeader("h_filepath").jsonpath("file_info[0].path")
                .setHeader("h_filename").jsonpath("file_info[0].new_file_name")
                .to("freemarker:templates/unzip_req.ftl")
                .log(".. response built for unzip request: ${body}");
                
                /*
                 * Inbound Data Description: JSON response data from create hash microservice
                 * Inbound Data Type: JSON
                 * Accept-Content: text/plain
                 * Method: HTTP-POST
                 * Outbound Data Description: JSON request payload for invoking hash seen microservice
                 */
                from("direct:build-hashseen").id("build-hashseen")
                .log("..Received payload from REST API: ${body}")
                .setHeader("h_sha256").jsonpath("file_data[0].hashes.sha256")
                .setBody().simple("${header.h_sha256}")
                .log(".. response built for unzip request: ${body}");

                /*
                 * Inbound Data Description: JSON response data from file mover microservice
                 * Inbound Data Type: JSON
                 * Accept-Content: text/plain
                 * Method: HTTP-POST
                 * Outbound Data Description: JSON request payload for invoking magic analysis engine (message queue)
                 */
                from("direct:build-magic-analysis").id("build-magic-analysis")
                .log("..Received payload from REST API: ${body}")
                .setHeader("h_filepath").jsonpath("file_info[0].path")
                .setHeader("h_filename").jsonpath("file_info[0].new_file_name")
                .to("freemarker:templates/magic_checker_req.ftl")
                .log(".. response built for magic check request: ${body}");
                
                /*
                 * Inbound Data Description: JSON response data from file mover microservice
                 * Inbound Data Type: JSON
                 * Accept-Content: text/plain
                 * Method: HTTP-POST
                 * Outbound Data Description: JSON request payload for invoking static and dynamic analysis engine (message queue)
                 */
                from("direct:build-analysis-engine").id("build-analysis-engine")
                .log("..Received payload from REST API: ${body}")
                .setHeader("h_filepath").jsonpath("file_info[0].path")
                .setHeader("h_filename").jsonpath("file_info[0].new_file_name")
                .to("freemarker:templates/analysis_engine_req.ftl")
                .log(".. response built for analysis engine request: ${body}");
            }
        };
    }
}