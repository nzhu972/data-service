package com.malware.application;

import com.malware.application.model.ProcessIdMapping;
import org.infinispan.manager.EmbeddedCacheManager;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@SuppressWarnings("unused") // Used by camel routes, just not picked up by IDE
@Service( "id-mapping-cache" )
public class IdMappingCache {

    private static final String CACHE_NAME = "processIdCache";
    private final EmbeddedCacheManager cacheManager;

    @Autowired
    public IdMappingCache(EmbeddedCacheManager cacheManager) {
        this.cacheManager = cacheManager;
    }

    /**
     * Publish a process id mapping to the cache
     * @param processId the process instance id
     * @param sId the sid
     * @param hId the hid
     */
    public void publishKeymap(int processId, int hId, int sId) {
        ProcessIdMapping mapping = new ProcessIdMapping( processId, hId, sId );
        cacheManager.getCache(CACHE_NAME).put(mapping.getProcessInstanceId(), mapping);
    }

    /**
     * Load a process id mapping
     * @param processInstanceId the process instance ID to load
     * @return the relevant process instance ID or {@code null} if it does not exist in the cache
     */
    public ProcessIdMapping getMappedValues(int processInstanceId) {
        return (ProcessIdMapping) cacheManager.getCache(CACHE_NAME).getOrDefault(processInstanceId, null);
    }

    /**
     * Delete a process instance ID from the cache
     * @param processInstanceId the process instance ID
     * @return {@code true} if an item was removed, otherwise {@code false}
     */
    public boolean deleteProcessMapping(int processInstanceId) {
        System.out.println("id = " + processInstanceId );

        // This is not removing from the persistent store for some reason. TODO: Investigate
        Object o = cacheManager.getCache(CACHE_NAME).remove(processInstanceId);
        return o != null;
    }

}
